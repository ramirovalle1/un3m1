#!/usr/bin/env python
# -*- coding: utf-8 -*

import os
import sys
from django.core.wsgi import get_wsgi_application
from django.shortcuts import render

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "settings")
application = get_wsgi_application()
from datetime import datetime, timedelta
from sga.graduados import convertir_certificadopdf_a_jpg, CUENTAS_CORREOS
import pyqrcode
import time
SITE_ROOT = os.path.dirname(os.path.realpath(__file__))
your_djangoproject_home = os.path.split(SITE_ROOT)[0]
sys.path.append(your_djangoproject_home)
from django.core.wsgi import get_wsgi_application
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "settings")
application = get_wsgi_application()
from sga.models import Graduado, FirmaPersona, Persona, Notificacion
from sagest.models import DistributivoPersona, PersonaDepartamentoFirmas
from settings import SITE_STORAGE, PUESTO_ACTIVO_ID, SITE_POPPLER
import uuid
from django.db import transaction
from sga.tasks import send_html_mail
from django.db.models import Q
from sga.funcionesxhtml2pdf import conviert_html_to_pdfsaveqrtitulo
from sga.graduados import convertir_certificadopdf_a_jpg
from sga.funciones import variable_valor

data = {}

data['IS_DEBUG'] = IS_DEBUG = variable_valor('IS_DEBUG')

dominio_sistema = 'https://sga.unemi.edu.ec'
graduados = Graduado.objects.filter(Q(status=True, inscripcion__carrera__coordinacion__id=7),
                                    fecharefrendacion__isnull=False, fecharefrendacion__year__gte=2022).order_by('-id')
graduadossinnombrehtml = graduados.filter(namehtmltitulo__isnull=True).order_by('-id')[:5]
# asentar a estado 3 los que ya fueron solicitados
idgraduadosyanotif = [13415,
13528,
13720,
13291,
11945,
12976,
12060,
12578,
13416,
13417,
12579,
11948,
11953,
11942,
12809,
12591,
12380,
12381,
12989,
12592,
12384,
12991,
11923,
12063,
12835,
12838,
11308,
12072,
12073,
11274,
11275,
13537,
13640,
12623,
13014,
13439,
13178,
13318,
13538,
13015,
12846,
13539,
12624,
11276,
13729,
13319,
13179,
13641,
13440,
11442,
13540,
13320,
13642,
13541,
12627,
11932,
13321,
11586,
11278,
11593,
13644,
13443,
12628,
13732,
12629,
13184,
13324,
13444,
12630,
12631,
12620,
11279,
11636,
13646,
11280,
13445,
13734,
12851,
13186,
12633,
13325,
13326,
12852,
12853,
13024,
12636,
13025,
13328,
13446,
13544,
12637,
13026,
13735,
13649,
12855,
13736,
13545,
13447,
12638,
12856,
13191,
12857,
13029,
13448,
12858,
13546,
13194,
13331,
13737,
12860,
12642,
13450,
13196,
12003,
13451,
13333,
13548,
12643,
11282,
12735,
13197,
12863,
13198,
13452,
13032,
13628,
11971,
12646,
13033,
13034,
13199,
13453,
12647,
11382,
11419,
12648,
12649,
11425,
11283,
11363,
12869,
13455,
11413,
12870,
12872,
11692,
11999,
12259,
12875,
12660,
13207,
13042,
13552,
12876,
13043,
11361,
11287,
11288,
11362,
11372,
11310,
11640,
12271,
11291,
11313,
11439,
11297,
11299,
11396,
11399,
12887,
13350,
12742,
13224,
12686,
12687,
11401,
13225,
13352,
12688,
12277,
12664,
13661,
12690,
13226,
13353,
13227,
13470,
13561,
13059,
12453,
12450,
12576,
13562,
13663,
12693,
13355,
12694,
13229,
13472,
13230,
12695,
13062,
12456,
12282,
11410,
11144,
12457,
11720,
13473,
13231,
13564,
12697,
13064,
11722,
12698,
12900,
12459,
11146,
12463,
11976,
13358,
13474,
13666,
11981,
11725,
11726,
13475,
13235,
12710,
11417,
11101,
11670,
11575,
11671,
11576,
11149,
11577,
13076,
12911,
13361,
13237,
13477,
13568,
12722,
13668,
11111,
12296,
13077,
12464,
12913,
13236,
13078,
13479,
13570,
12725,
13363,
13670,
13079,
12914,
13238,
13480,
13364,
12726,
13665,
13671,
13571,
13080,
12915,
13572,
13481,
13365,
12727,
12465,
13672,
12728,
13573,
11125,
11150,
11134,
12730,
12731,
11585,
13084,
12732,
13366,
12919,
13241,
13575,
13482,
11123,
11331,
11943,
12920,
13242,
12301,
11124,
11705,
12734,
12738,
12923,
12739,
11300,
13245,
13483,
11260,
11158,
11609,
11261,
11262,
11263,
11946,
11264,
12027,
12743,
13576,
12745,
13090,
12721,
12747,
12748,
12032,
11627,
13676,
13370,
12750,
13092,
13485,
13371,
12751,
12930,
13249,
13578,
13486,
13372,
12467,
12752,
13678,
12931,
13094,
13250,
13487,
13580,
12468,
13373,
13679,
13247,
13096,
13251,
13581,
13488,
13374,
12469,
13680,
12933,
13586,
12038,
13489,
12934,
13244,
13375,
13120,
13121,
13124,
12975,
12979,
12905,
12978,
13140,
13144,
12980,
12977,
13122,
12575,
12577,
12581,
12580,
13626,
13627,
13721,
12982,
13149,
13297,
12983,
12984,
13146,
12981,
13147,
13148,
13529,
13418,
12805,
12804,
12582,
12584,
12583,
13629,
11947,
12988,
12987,
13150,
13151,
13152,
12986,
13300,
13301,
13425,
13530,
12810,
12806,
12585,
12587,
12588,
12593,
12590,
12589,
13631,
13630,
13722,
13723,
11024,
12990,
13302,
12820,
13158,
13157,
12821,
13153,
13154,
13155,
13156,
12818,
12994,
12992,
13426,
13532,
12598,
12594,
12595,
12597,
12596,
11266,
11937,
13160,
12822,
12825,
12824,
12997,
12998,
12995,
13161,
13163,
13304,
13159,
13428,
13429,
13430,
13427,
12599,
12601,
12602,
12603,
12443,
11267,
11938,
13305,
13000,
13165,
13162,
12830,
12827,
12828,
13308,
13164,
13431,
13432,
13534,
12605,
12606,
12729,
12604,
12064,
13633,
13724,
11269,
11268,
13309,
13001,
13310,
13169,
12834,
13002,
13003,
12832,
13167,
13166,
13168,
13170,
13433,
13434,
13535,
12608,
12607,
12609,
12612,
12610,
11940,
13173,
13313,
13006,
13007,
12837,
12841,
12840,
12839,
12836,
13008,
13009,
13171,
13314,
13172,
13435,
12618,
12616,
12617,
12614,
12613,
12615,
11272,
11941,
13012,
12842,
13174,
13175,
13010,
13011,
13013,
12844,
13317,
13438,
13437,
13436,
12622,
12621,
12619,
13726,
13637,
13725,
13638,
13322,
12849,
13017,
12847,
12848,
13016,
13020,
13022,
13018,
13019,
13323,
13442,
13441,
13543,
13542,
12626,
12632,
13643,
13730,
13731,
13639,
13733,
13727,
13023,
13031,
12854,
12859,
13030,
13188,
13193,
13327,
13330,
13332,
13449,
12639,
12641,
12635,
12634,
13653,
13651,
13647,
11281,
12002,
12004,
12865,
12868,
13036,
13037,
12867,
12864,
13035,
13201,
13202,
13334,
13551,
13454,
13549,
13550,
12645,
12653,
12652,
12651,
12644,
12705,
13655,
13339,
13038,
12874,
13205,
12873,
13039,
13040,
13041,
13458,
12736,
12661,
12659,
12658,
12656,
12657,
13632,
11286,
11285,
12261,
11359,
11375,
13342,
13344,
13343,
12877,
12880,
13044,
13045,
12878,
13209,
13459,
13553,
13466,
12668,
12667,
12669,
13634,
12441,
12445,
11378,
11311,
11314,
11309,
13048,
12879,
13211,
13047,
12881,
12883,
13212,
13213,
13554,
12671,
12672,
12673,
12715,
12670,
11290,
11294,
11293,
11289,
11699,
13050,
13214,
13347,
13216,
13217,
13049,
12882,
12884,
13215,
13460,
13461,
13555,
12741,
12677,
12674,
13635,
11296,
11298,
12272,
11961,
11964,
13053,
12888,
13218,
13219,
12889,
13221,
12885,
13054,
12886,
13348,
13349,
13556,
13465,
12683,
12680,
12678,
13659,
13636,
13645,
11965,
11966,
13223,
12895,
12892,
13057,
13058,
13559,
13557,
13467,
13468,
13469,
13558,
12663,
12744,
12691,
12689,
12675,
12684,
12685,
13660,
13662,
12274,
13357,
11408,
12901,
13061,
13356,
12896,
12902,
12898,
13060,
13065,
13066,
13471,
13563,
12458,
12696,
13654,
13652,
13648,
11721,
12460,
13359,
13067,
12903,
12904,
13234,
12907,
13565,
13566,
12708,
12625,
12706,
12704,
12709,
12702,
12707,
11723,
11724,
11974,
11975,
13073,
13074,
13075,
12909,
13233,
13360,
13362,
13476,
13478,
13569,
13567,
12712,
12714,
12724,
12676,
12718,
12711,
12717,
13667,
13669,
11570,
11133,
11170,
11255,
11256,
11113,
11120,
11330,
12912,
13240,
13085,
13081,
12917,
12921,
13574,
12737,
12733,
13673,
11583,
11258,
11160,
11259,
11159,
11163,
11305,
13087,
13088,
13089,
13091,
13246,
12924,
12926,
13368,
12586,
12746,
12740,
11619,
11624,
11277,
12927,
12929,
12993,
13484,
13577,
12749,
12454,
12455,
11632,
11437,
11360,
11438,
11445,
11388,
11426,
11420,
11710,
11379,
11365,
11416,
11427,
11152,
11303,
11141,
11114,
11304,
11155,
11104,
11312,
11332,
11926,
11222,
11302,
11630,
11618,
11614,
11254,
11292,
11270,
11924,
11143,
11126,
11119,
11151,
12071,
11221,
11257,
11307,
11306,
11132,
11107,
13307,
13294,
13180,
13295,
13296,
13316,
13298,
13315,
13299,
13303,
13181,
13306,
13182,
13185,
13187,
13189,
13192,
13335,
13200,
13340,
13203,
13206,
13341,
13210,
13051,
13052,
13055,
13063,
13068,
13069,
13070,
13071,
12925,
12833,
12899,
12906,
12910,
12985,
13222,
13346,
12831,
12922,
12916,
13354,
12817,
12996,
13021,
13027,
12819,
12861,
13248,
13176,
13177,
13195,
13220,
12897,
12823,
12845,
13046,
12891,
13228,
12850,
12894,
12890,
12893,
12918,
12928,
13143,
13145,
13183,
13056,
13336,
13337,
13338,
13533,
13650,
13367,
12808,
12666,
12665,
12662,
12654,
12655,
12640,
12700,
12679,
12682,
12699,
12611,
12692,
12703,
12719,
12720,
13728,
12444,
12264,
11265,
12268,
12275,
11986]
graduadosyanotificados = graduados.filter(id__in=idgraduadosyanotif)[:5]

limitecorreo = 5

if IS_DEBUG:
    dominio_sistema = 'http://127.0.0.1:8000'

    # copiar de produccion
    graduadossinnombrehtml = graduados.filter(namehtmltitulo__isnull=True).order_by('-id')[:2]
    graduadosyanotificados = graduados.filter(id__in=idgraduadosyanotif)[:2]

    limitecorreo = 2

# añadir el namehtml a los titulos
listaidnameerror = []
total_namehtml = None
for graduadosinnamehtml in graduadossinnombrehtml:
    try:
        if graduadosinnamehtml.urlhtmltitulo:
            namehtml = graduadosinnamehtml.urlhtmltitulo.split('/').__getitem__(4)
            namehtml = namehtml[:len(namehtml)-5]
            graduadosinnamehtml.namehtmltitulo = namehtml
            graduadosinnamehtml.save()
        else:
            listaidnameerror.append(f'id: {graduadosinnamehtml.id} cedula: {graduadosinnamehtml.inscripcion.persona.cedula} error: no hay url html titulo')
    except Exception as ex:
        listaidnameerror.append(f'id: {graduadosinnamehtml.id} cedula: {graduadosinnamehtml.inscripcion.persona.cedula} error: {str(ex)}')
total_namehtml = len(graduadossinnombrehtml)
# añadir el namehtml a los titulos

#marcar los que ya fueron notificados en el estado 3-notificado
total_graduadosyanotificados = 0
lista_erroryanotificados = []
for graduadoyanotificado in graduadosyanotificados:
    try:
        graduadoyanotificado.estadonotificacion = 3
        graduadoyanotificado.save()
    except Exception as ex:
        lista_erroryanotificados.append(f'id: {graduadoyanotificado.id} cedula: {graduadoyanotificado.inscripcion.persona.cedula} error: {str(ex)}')
total_graduadosyanotificados = len(graduadosyanotificados)
#marcar los que ya fueron notificados en el estado 3-notificado

# notificar por correo a los graduados de posgrado total 354
graduados = Graduado.objects.filter(Q(status=True, inscripcion__carrera__coordinacion__id=7),
                                    fecharefrendacion__isnull=False, fecharefrendacion__year__gte=2022,
                                    estadonotificacion=2).exclude(id__in=idgraduadosyanotif).order_by('-id')[:5]
if IS_DEBUG:
    graduados = Graduado.objects.filter(Q(status=True, inscripcion__carrera__coordinacion__id=7),
                                        fecharefrendacion__isnull=False, fecharefrendacion__year__gte=2022,
                                        estadonotificacion=2).exclude(id__in=idgraduadosyanotif).order_by('-id')[:2]

data["DOMINIO_DEL_SISTEMA"] = dominio_sistema
cont = 0
correoins=[]
# actualizado
version = datetime.now().strftime('%Y%m%d_%H%M%S%f')
# Firmante del correo
firmacertificado = None
if PersonaDepartamentoFirmas.objects.filter(status=True, departamento=158).exists():
    firmacertificado = PersonaDepartamentoFirmas.objects.filter(status=True, departamento=158).order_by(
        '-id').first()
lista_correctos = []
lista_errores = []
for graduado in graduados:
    try:
        if graduado.urlhtmltitulo and graduado.rutapdftitulo:
            cont += 1
            urlhtmlinsignia = dominio_sistema + graduado.urlhtmltitulo
            # envio por correo
            correograduado = graduado.inscripcion.persona.lista_emails()
            if cont <= limitecorreo:
                correograduado.append('pruebasdesarrollo2023@gmail.com')
            if IS_DEBUG:
                # persona = Persona.objects.get(id=21966)
                # correograduado = persona.lista_emails()
                correograduado = ['pruebasdesarrollo2023@gmail.com']
            asunto = u"INSIGNIA - " + str(graduado.inscripcion.carrera)
            send_html_mail(asunto, "emails/notificar_tituloinsignia_posgrado.html",
                           {'sistema': 'sga', 'graduado': graduado,
                            'director': firmacertificado, 'urlhtmlinsignia': f'{urlhtmlinsignia}?v={version}'},
                           correograduado,
                           [], None,
                           cuenta=CUENTAS_CORREOS[0][1])
            lista_correctos.append(f'Id: {graduado.id} Cédula: {graduado.inscripcion.persona.cedula}')
            graduado.estadonotificacion = 3
            graduado.save()
            if not IS_DEBUG:
                time.sleep(90)
        else:
            lista_errores.append(f'Id:{graduado.id} Cédula: {graduado.inscripcion.persona.cedula} Error: No hay titulo o insignia\n')
    except Exception as ex:
        lista_errores.append(f'Id:{graduado.id} Cédula: {graduado.inscripcion.persona.cedula} - Error: {ex}\n')
# notificacion al administrativo en sga
resultadosotros = f' PROCESO NAME HTML\nTotal sin name html {str(total_namehtml)}, total sin name html con errores: {str(listaidnameerror)}' \
                         + f' \nPROCESO NAME HTML Total sin name html {str(total_namehtml)}, total sin name html con errores: {str(listaidnameerror)}. ' \
                           f'\nPROCESO GRADUADOS NOTIFICADOS PREVIAMENTE total graduados notificados primero:{str(total_graduadosyanotificados)} ' \
                           f' Lista errores de graduados previamente notificados{str(lista_erroryanotificados)}.'
if len(lista_errores) == 0:
    titulonotificacion = f"Emails enviados exitosamente con los Títulos de posgrado (masivo)"
    cuerponotificacion = f"Se envió los emails correctamente. \nTotal correctos: {str(len(lista_correctos))}, \nTotal graduados: {str(len(graduados))}. Emails enviados correctamente: {str(lista_correctos)}"
    cuerponotificacion = cuerponotificacion + resultadosotros
else:
    titulonotificacion = f"Error en el envío de emails con los títulos de posgrado (masivo)"
    cuerponotificacion = f"No se enviaron {str(len(lista_errores))} emails: \n{lista_errores}, \nTotal correctos: {str(len(lista_correctos))}, \nTotal graduados: {str(len(graduados))}"
    cuerponotificacion = cuerponotificacion + resultadosotros
# Notifica el resultado del proceso como notificacion en el sga
notificacion = Notificacion(
    titulo=titulonotificacion,
    cuerpo=cuerponotificacion,
    destinatario=Persona.objects.get(pk=21966),
    url=f"/graduados",
    content_type=None,
    object_id=None,
    prioridad=1,
    app_label='sga',
    fecha_hora_visible=datetime.now() + timedelta(days=3))
notificacion.save()
    # fin notificacion al administrativo sga
print('Ha finalizado el proceso')